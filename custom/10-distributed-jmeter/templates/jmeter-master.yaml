apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.dep.name }}-master
  namespace: perf-platform

spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Values.dep.name }}-master

  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Values.dep.name }}-master
        
    spec:
      containers:
        - name: distributed-jmeter-master
          image: "{{ .Values.master.jmeter.image }}:{{ .Values.master.jmeter.tag }}"
          imagePullPolicy: {{ .Values.master.jmeter.pullPolicy }}
          command:
            - cat
          tty: true
          resources:
            requests:
              memory: "{{ .Values.master.jmeter.res.req.mem }}"
              cpu: "{{ .Values.master.jmeter.res.req.cpu }}"
            limits:
              memory: "{{ .Values.master.jmeter.res.lim.mem }}"
              cpu: "{{ .Values.master.jmeter.res.lim.cpu }}"
          volumeMounts:
            - mountPath: /root/.m2
              name: m2-volume
    
        - name: kubehelm
          image: "{{ .Values.master.kube.image }}:{{ .Values.master.kube.tag }}"
          imagePullPolicy: {{ .Values.master.kube.pullPolicy }}
          command:
            - cat
          tty: true
          resources:
            requests:
              memory: "{{ .Values.master.kube.res.req.mem }}"
              cpu: "{{ .Values.master.kube.res.req.cpu }}"
            limits:
              memory: "{{ .Values.master.kube.res.lim.mem }}"
              cpu: "{{ .Values.master.kube.res.lim.cpu }}"
          volumeMounts:
            - mountPath: /root/.helm
              name: helm-volume
      volumes:
        - name: m2-volume
          persistentVolumeClaim:
            claimName: m2-pvc

        - name: helm-volume
          persistentVolumeClaim:
            claimName: helm-pvc
    


  